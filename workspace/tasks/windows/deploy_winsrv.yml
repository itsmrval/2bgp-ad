- name: Get available VMID
  command: pvesh get /cluster/nextid -vmid {{ vm_id }}
  register: next_vmid
  failed_when: next_vmid.rc != 0

- name: Create temp directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /mnt/winiso
    - /var/lib/vz/template/provision_winsrv/
    - /var/lib/vz/template/file_xml/
    - /var/lib/vz/template/provision_winsrv/temp
  become: yes

- name: Copy autounattend.xml to provision directory on Proxmox
  copy:
    src: ./tasks/windows/autounattend.xml
    dest: "/var/lib/vz/template/file_xml/autounattend.xml"
    owner: root
    group: root

- name: Download QEMU Guest Agent MSI
  copy:
    src: ./tasks/windows/qemu-ga.msi
    dest: "/var/lib/vz/template/provision_winsrv/temp/qemu-ga.msi"
    owner: root
    group: root

- name: Install required packages for xml module
  apt:
    name: 
      - python3-lxml
      - python3-pip
    state: present
  become: yes

- name: Check if ISO is already mounted
  command: mount
  register: mount_output
  changed_when: false

- name: Unmount Windows Server ISO if already mounted
  command: umount /mnt/winiso
  when: "'/mnt/winiso' in mount_output.stdout"
  ignore_errors: yes

- name: Mount Windows Server ISO
  command: mount -o loop {{ iso_dir }}/{{ iso_file }} /mnt/winiso
  become: yes

- name: Copy ISO contents to provision directory
  command: rsync -av /mnt/winiso/ /var/lib/vz/template/provision_winsrv/
  become: yes

- name: Unmount Windows Server ISO
  command: umount /mnt/winiso
  become: yes

- name: Copy autounattend.xml to provision directory
  command: cp /var/lib/vz/template/file_xml/autounattend.xml /var/lib/vz/template/provision_winsrv/
  become: yes


- name: Install genisoimage
  apt:
    name: genisoimage
    state: present
  become: yes

- name: Create new ISO file
  command: >
    genisoimage -o /var/lib/vz/template/iso/Windows_Server_Auto.iso
    -b boot/etfsboot.com -no-emul-boot -boot-load-size 8 -iso-level 3
    -relaxed-filenames -allow-lowercase -allow-multidot -udf -J -joliet-long
    -eltorito-alt-boot -e boot/boot.sdi -no-emul-boot -V "WinSrv_Auto"
    -allow-limited-size /var/lib/vz/template/provision_winsrv/
  become: yes
  register: iso_created

- name: Create VM
  command: >
    qm create {{ next_vmid.stdout }}
    --name {{ vm_name }}
    --sockets {{ vm_sockets }}
    --cores {{ vm_cores }}
    --memory {{ vm_memory }}
    --ide2 file=local:iso/Windows_Server_Auto.iso,media=cdrom
    --net0 model=e1000,bridge=vmbr0,firewall=1
    --scsihw virtio-scsi-pci
    --sata0 {{ storage_name }}:{{ drive_size_gb }},format={{ format }}
    --ostype {{ vm_os_type }}
    --agent 1
    --boot order=ide2

- name: Start VM
  command: "qm start {{ next_vmid.stdout }}"

- name: Wait for VM to be in running state
  shell: "qm list | grep {{ next_vmid.stdout }} | awk '{print $3}'"
  register: vm_status
  until: vm_status.stdout | trim == "running"
  retries: 30
  delay: 10

- name: Wait for QEMU Guest Agent to become accessible
  shell: "qm agent {{ next_vmid.stdout }} ping"
  register: agent_result
  until: agent_result.rc == 0
  retries: 60
  delay: 10
  ignore_errors: yes

- name: Remove IDE CD Drive
  command: "qm set {{ next_vmid.stdout }} --delete ide2"
  when: agent_result.rc == 0

- name: Shutdown VM
  command: "qm shutdown {{ next_vmid.stdout }}"
  when: agent_result.rc == 0

- name: Wait for VM to be in stopped state
  shell: "qm list | grep {{ next_vmid.stdout }} | awk '{print $3}'"
  register: vm_status
  until: vm_status.stdout | trim == "stopped"
  retries: 30
  delay: 10
  when: agent_result.rc == 0

- name: Create template from VM
  command: "qm template {{ next_vmid.stdout }}"
  when: agent_result.rc == 0

- name: Done
  debug:
    msg: "Template build {{ vm_name }}, with VMID {{ next_vmid.stdout }} complete and accessible via QEMU Guest Agent."
  when: agent_result.rc == 0
