- name: Check if templates exist
  ansible.builtin.command:
    cmd: qm list
  register: qm_list_output

- name: Set facts for templates server
  ansible.builtin.set_fact:
    template_exists_1: "{{ template_win_1 in qm_list_output.stdout }}"
    template_exists_2: "{{ template_win_2 in qm_list_output.stdout }}"
    template_exists_3: "{{ template_win_3 in qm_list_output.stdout }}"
  when: role_type == "server"

- name: Set facts for templates client
  ansible.builtin.set_fact:
    template_exists_1: "{{ template_win_4 in qm_list_output.stdout }}"
    template_exists_2: "{{ template_win_5 in qm_list_output.stdout }}"
    template_exists_3: "{{ template_win_6 in qm_list_output.stdout }}"
  when: role_type == "client"

- name: Check if Windows ISO exists
  stat:
    path: "/var/lib/vz/template/iso/{{ iso_winserv2019_name if role_type == 'server' else iso_winclient_name }}"
  register: windows_iso_stat

- name: Check if VirtIO ISO exists
  stat:
    path: "/var/lib/vz/template/iso/{{ iso_virtio_drivers_name }}"
  register: virtio_iso_stat

- name: Install aria2
  apt:
    name: aria2
    state: present
  become: yes

- name: Download Windows ISO
  command: >
    aria2c -x 16 -s 16 -k 1M 
    -d "/var/lib/vz/template/iso/" 
    -o "{{ iso_winserv2019_name if role_type == 'server' else iso_winclient_name }}"
    "{{ iso_winserv2019 if role_type == 'server' else iso_winclient }}"
  args:
    creates: "/var/lib/vz/template/iso/{{ iso_winserv2019_name if role_type == 'server' else iso_winclient_name }}"
  when: not windows_iso_stat.stat.exists

- name: Download VirtIO drivers ISO
  command: >
    aria2c -x 16 -s 16 -k 1M 
    -d "/var/lib/vz/template/iso/" 
    -o "{{ iso_virtio_drivers_name }}"
    "{{ iso_virtio_drivers }}"
  args:
    creates: "/var/lib/vz/template/iso/{{ iso_virtio_drivers_name }}"
  when: not virtio_iso_stat.stat.exists

- name: Ensure mount directories are absent
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /mnt/winiso
    - /mnt/virtio
  become: yes
  ignore_errors: yes

- name: Create mount directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  with_items:
    - /mnt/winiso
    - /mnt/virtio
    - /mnt/provision
  become: yes

- name: Install dependencies
  apt:
    name:
      - python3-lxml
      - python3-pip
      - genisoimage
    state: present
  become: yes

- name: Download QEMU Guest Agent
  copy:
    src: "{{ playbook_dir }}/assets/windows/qemu-ga.msi"
    dest: "/mnt/provision/qemu-ga.msi"
    owner: root
    group: root

- name: Copy PowerShell scripts
  copy:
    src: "{{ item }}"
    dest: "/mnt/provision/{{ item | basename }}"
    owner: root
    group: root
  with_fileglob:
    - "{{ playbook_dir }}/assets/windows/*.ps1"

- name: Mount ISO files
  block:
    - name: Mount VirtIO drivers ISO
      command: mount -o loop,ro /var/lib/vz/template/iso/{{ iso_virtio_drivers_name }} /mnt/virtio
      become: yes

    - name: Mount Windows ISO
      command: mount -o loop,ro /var/lib/vz/template/iso/{{ iso_winserv2019_name if role_type == 'server' else iso_winclient_name }} /mnt/winiso
      become: yes

  when:
    - windows_iso_stat.stat.exists
    - virtio_iso_stat.stat.exists

- name: Copy ISO contents to provision directory
  block:
    - name: Copy Windows contents
      command: rsync -av /mnt/winiso/ /mnt/provision
      become: yes

    - name: Copy VirtIO contents
      command: rsync -av /mnt/virtio/ /mnt/provision/
      become: yes

- name: Unmount ISO files
  block:
    - name: Unmount Windows ISO
      mount:
        path: /mnt/winiso
        state: unmounted
      become: yes

    - name: Unmount VirtIO ISO
      mount:
        path: /mnt/virtio
        state: unmounted
      become: yes

- name: Copy Autounattend XML for server
  copy:
    src: "{{ playbook_dir }}/assets/windows/autounattend.xml"
    dest: "/mnt/provision/autounattend.xml"
    owner: root
    group: root
  when: role_type == "server"

- name: Copy Autounattend XML for client
  copy:
    src: "{{ playbook_dir }}/assets/windows/clientautounattend.xml"
    dest: "/mnt/provision/clientautounattend.xml"
    owner: root
    group: root
  when: role_type == "client"

- name: Create Server ISO
  command: >
    genisoimage -o /var/lib/vz/template/iso/Windows_Server_Auto.iso
    -b boot/etfsboot.com -no-emul-boot -boot-load-size 8 -iso-level 3
    -relaxed-filenames -allow-lowercase -allow-multidot -udf -J -joliet-long
    -eltorito-alt-boot -e boot/boot.sdi -no-emul-boot -V "WinSrv_Auto"
    -allow-limited-size /mnt/provision/
  become: yes
  register: iso_created
  when: role_type == "server"

- name: Create Client ISO
  command: >
    genisoimage -o /var/lib/vz/template/iso/Windows_Client_Auto.iso
    -b boot/etfsboot.com -no-emul-boot -boot-load-size 8 -iso-level 3
    -relaxed-filenames -allow-lowercase -allow-multidot -udf -J -joliet-long
    -eltorito-alt-boot -e boot/boot.sdi -no-emul-boot -V "WinClient_Auto"
    -allow-limited-size /mnt/provision/
  become: yes
  register: iso_created
  when: role_type == "client"
