- name: define_variables
  set_fact:
    vms:
      - { vm_id: "{{ template_win_4 }}", vm_name: "build-04", storage_name: "{{ vm_storage }}", server_ip: "10.100.0.112", server_domain: "mgmgrand.com" }
      - { vm_id: "{{ template_win_5 }}", vm_name: "build-05", storage_name: "{{ vm_storage }}", server_ip: "10.100.0.113", server_domain: "mirage.com" }
    vm_memory: 4096
    vm_cores: 4
    vm_sockets: 1
    drive_size_gb: 14
    format: "qcow2"
    vm_os_type: "win8"
    agent: 1
    node: "{{ inventory_hostname }}"

# - name: create_vm
#   command: >
#     qm create {{ item.vm_id }}
#     --name {{ item.vm_name }}
#     --sockets {{ vm_sockets }}
#     --cores {{ vm_cores }}
#     --memory {{ vm_memory }}
#     --ide2 file=local:iso/Windows_Client_Auto.iso,media=cdrom
#     --scsihw virtio-scsi-pci
#     --sata0 {{ item.storage_name }}:{{ drive_size_gb }},format={{ format }}
#     --net0 model=e1000e,bridge=cust100
#     --ostype {{ vm_os_type }}
#     --agent {{ agent }}
#     --boot order=ide2
#   with_items: "{{ vms }}"
#   register: vm_creation

# - name: start_vms
#   command: "qm start {{ item.vm_id }}"
#   with_items: "{{ vms }}"
#   when: item.vm_id in vm_creation.results | map(attribute='item.vm_id') | list

- name: waiting_agent
  shell: "qm agent {{ item.vm_id }} ping"
  register: agent_result
  until: agent_result.rc == 0
  retries: 300
  delay: 10
  with_items: "{{ vms }}"

- name: configure ethernet interface
  shell: >
    qm guest exec {{ item.vm_id }} -- powershell.exe -Command "
    New-NetIPAddress -InterfaceAlias Ethernet -IPAddress '10.100.0.{{ item.vm_id }}' -PrefixLength 16 -DefaultGateway 10.100.0.254 -AddressFamily IPv4;
    Set-DnsClientServerAddress -InterfaceAlias Ethernet -ServerAddresses ('{{ item.server_ip }}','8.8.8.8')"
  register: network_config
  until: network_config.rc == 0
  retries: 100 
  delay: 5
  with_items: "{{ vms }}"

- name: verify ip configuration
  shell: >
    qm guest exec {{ item.vm_id }} -- powershell.exe -Command "
    (Get-NetIPAddress -InterfaceAlias Ethernet -AddressFamily IPv4).IPAddress"
  register: ip_verification
  with_items: "{{ vms }}"


- name: reconfigure ethernet interface
  shell: >
    qm guest exec {{ item.vm_id }} -- powershell.exe -Command "
    Remove-NetIPAddress -InterfaceAlias Ethernet -Confirm:$false;
    New-NetIPAddress -InterfaceAlias Ethernet -IPAddress '10.100.0.{{ item.vm_id }}' -PrefixLength 16 -DefaultGateway 10.100.0.254 -AddressFamily IPv4;
    Set-DnsClientServerAddress -InterfaceAlias Ethernet -ServerAddresses ('{{ item.server_ip }}','8.8.8.8')"
  register: network_config_2
  until: network_config.rc_2 == 0
  retries: 100 
  delay: 5
  when: "'10.100.0.' + item.vm_id not in ip_verification.results[idx].stdout"
  with_items: "{{ vms }}"
  loop_control:
    index_var: idx


- name: waiting_install
  command: >
    qm guest exec {{ item.vm_id }} -- powershell.exe -Command "Get-Content 'C:\Windows\Setup\State\State.ini'"
  register: installation_complete
  until: installation_complete.stdout is search('ImageState=IMAGE_STATE_COMPLETE')
  retries: 200
  delay: 10
  with_items: "{{ vms }}"

- name: insert pc in domain
  shell: >
    qm guest exec {{ item.vm_id }} -- powershell.exe -Command  "Add-Computer -DomainName {{ item.server_domain }} -Credential (New-Object System.Management.Automation.PSCredential ('Administrator@{{ item.server_domain }}', (ConvertTo-SecureString 'Velizy78!' -AsPlainText -Force))) -Restart"
  register: domain_result
  until: domain_result.rc == 0
  retries: 50
  delay: 10
  with_items: "{{ vms }}"


- name: verify domain for pc client
  shell: >
    qm guest exec {{ item.vm_id }} -- powershell.exe -Command "(Get-WmiObject Win32_ComputerSystem).Domain"
  register: domain_verify
  until: domain_verify.stdout is search(item.server_domain)
  retries: 300
  delay: 5
  with_items: "{{ vms }}"
