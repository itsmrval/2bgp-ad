### Required variables:
# dest_ip
# port (single port or range)
# protocol

- name: apply_bash
  ansible.builtin.shell: |
    DEST_IP="{{ dest_ip }}"
    PORT_RANGE="{{ port }}"
    PROTOCOL="{{ protocol | default('udp') }}"

    # Check if port range contains '-'
    if [[ "$PORT_RANGE" == *"-"* ]]; then
        START_PORT=$(echo "$PORT_RANGE" | cut -d'-' -f1)
        END_PORT=$(echo "$PORT_RANGE" | cut -d'-' -f2)
        for ((PORT=START_PORT; PORT<=END_PORT; PORT++)); do
            echo "Forwarding $PROTOCOL traffic on port $PORT to $DEST_IP:$PORT"
            iptables -t nat -A PREROUTING -p "$PROTOCOL" --dport "$PORT" -j DNAT --to-destination "$DEST_IP:$PORT"
            iptables -A FORWARD -p "$PROTOCOL" -d "$DEST_IP" --dport "$PORT" -j ACCEPT
        done
    else
        # Single port case
        echo "Forwarding $PROTOCOL traffic on port $PORT_RANGE to $DEST_IP:$PORT_RANGE"
        iptables -t nat -A PREROUTING -p "$PROTOCOL" --dport "$PORT_RANGE" -j DNAT --to-destination "$DEST_IP:$PORT_RANGE"
        iptables -A FORWARD -p "$PROTOCOL" -d "$DEST_IP" --dport "$PORT_RANGE" -j ACCEPT
    fi

    # Enable NAT for outbound traffic
    iptables -t nat -A POSTROUTING -j MASQUERADE

    # Save iptables rules
    iptables-save
  args:
    executable: /bin/bash
